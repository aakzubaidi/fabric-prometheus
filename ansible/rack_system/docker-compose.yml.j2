version: '3.1'

services:
        prometheus_service:
                # The Prometheus Client
                image: prom/prometheus:v2.19.2
                user: "${UID}:${GID}"
                volumes:
                        # config files
                        - ./prometheus/config/:/etc/prometheus/
                        # TSDB, WAL, chunks
                        - ./prometheus/data:/prometheus
                command:
                        - '--config.file=/etc/prometheus/prometheus_config.yml'
                        - '--storage.tsdb.path=/prometheus'
                        - '--storage.tsdb.max-block-duration=2h'
                        - '--storage.tsdb.min-block-duration=2h'
                        - '--web.enable-lifecycle'
                        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
                        - '--web.console.templates=/usr/share/prometheus/consoles'
                # Expose ports to local host for outside nginxs mapping
                #ports:
                #        - 127.0.0.1:9090:9090
                #        - {{ rack_public_ip }}:9090:9090
                restart: always
                extra_hosts:
                        #- host.docker.internal:host-gateway
                        - {{ site_acronym }}-hn.fabric-testbed.net:10.1.1.10
                        - {{ site_acronym }}-w1.fabric-testbed.net:10.1.1.11
                        - {{ site_acronym }}-w2.fabric-testbed.net:10.1.1.12
                        - {{ site_acronym }}-w3.fabric-testbed.net:10.1.1.13


        thanos-sidecar_service:
                # Exports Prometheus data to remote S3 compatible object store.
                image: quay.io/thanos/thanos:v0.14.0
                #user: "${UID}:${GID}"
                volumes:
                        # config files
                        - ./thanos/config/:/etc/thanos/
                        # Provide access to the promtheus data.
                        - ./prometheus/data:/prometheus
                command:
                        - 'sidecar'
                        - '--tsdb.path=/prometheus'
                        - '--prometheus.url=http://prometheus:9090'
                        - '--grpc-address=0.0.0.0:10901'     
                        - '--http-address=0.0.0.0:10902'
                        - '--objstore.config-file=/etc/thanos/object_store_config.yml'
                depends_on:
                        - prometheus_service
                # depends_on and links are used intentionally 
                # causes startup time delay to be enough to contact prometheus 
                # HACK find better way to ensure prometheus is running before starting sidcar
                links:
                        - prometheus_service:prometheus
                restart: always

        thanos-querier_service:
                image: quay.io/thanos/thanos:v0.14.0
                #user: "${UID}:${GID}"
                command:
                        - 'query'
                        - '--grpc-address=0.0.0.0:10921'
                        - '--http-address=0.0.0.0:10922'
                        - '--query.replica-label=replica'
                        - '--store=thanos-sidecar_service:10901'
                        - '--store=thanos-store-gateway_service:10911'
                # Expose port so global query will work
                ###ports:
                ###        - 127.0.01:10902:10902
                #links:
                #        - thanos-sidecar_service:thanos-sidecar
                #        - thanos-store-gateway_service:thanos-store-gateway
                depends_on:
                        - thanos-sidecar_service
                        - thanos-store-gateway_service
                restart:
                        always   

        thanos-store-gateway_service:
                image: quay.io/thanos/thanos:v0.14.0
                #user: "${UID}:${GID}"
                volumes:
                        # Config files. Same as for Sidecar
                        - ./thanos/config/:/etc/thanos/
                command:
                        - 'store'
                        - '--grpc-address=0.0.0.0:10911'
                        - '--http-address=0.0.0.0:10912'
                        - '--data-dir=/tmp/thanos/store'
                        - '--objstore.config-file=/etc/thanos/object_store_config.yml'
                restart: always

        grafana_service:
                image: grafana/grafana:7.1.0
                #user: "472"
                user: "${UID}:${GID}"
                depends_on:
                    - prometheus_service
                    - thanos-querier_service
                # Expose for outside nginx
                ###ports:
                ###    - 127.0.0.1:3000:3000
                volumes:
                    - ./grafana/data:/var/lib/grafana
                    - ./grafana/provisioning/:/etc/grafana/provisioning/
                    - ./grafana/custom:/etc/grafana/custom/
                env_file:
                    - ./grafana/env_file
                restart: always

        {# nginx:
                image: nginx:1.19
                #user: "${UID}:${GID}"
                ports:
                        #- {{ rack_public_ip }}:80:80
                        #- {{ rack_public_ip }}:443:443
                        - {{ rack_public_ip }}:3000:3000
                        - {{ rack_public_ip }}:9090:9090 # for prometheus stats
                        - {{ rack_public_ip }}:10902:10902 # for thanos stats
                volumes:
                        - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf
                        - ./nginx/certs:/etc/ssl/private
                depends_on:
                        - grafana_service
                        - prometheus_service
                        - thanos-querier_service
                         #}

                         
        docker-monitor_service:
                image: prometheusnet/docker_exporter
                volumes:
                        - /var/run/docker.sock:/var/run/docker.sock
        # TODO               
        # snmp_exporter_service:
              
